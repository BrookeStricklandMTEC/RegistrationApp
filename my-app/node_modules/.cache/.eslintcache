[{"/Users/bubba/Documents/react-project/src/index.js":"1","/Users/bubba/Documents/react-project/src/App.js":"2","/Users/bubba/Documents/react-project/src/reportWebVitals.js":"3","/Users/bubba/Documents/react-project/src/arrays.js":"4","/Users/bubba/Documents/react-project/src/pages/landing.js":"5","/Users/bubba/Documents/react-project/src/pages/encounter.js":"6","/Users/bubba/Documents/react-project/src/components/NavComp.js":"7","/Users/bubba/Documents/react-project/src/randomMaster.js":"8","/Users/bubba/Documents/react-project/src/pages/result.js":"9","/Users/bubba/Documents/react-project/src/pages/useRandom.js":"10","/Users/bubba/Documents/react-project/src/components/Loader.jsx":"11","/Users/bubba/Documents/react-project/src/components/FCRouter.js":"12","/Users/bubba/Documents/react-project/src/components/NpcStats.js":"13","/Users/bubba/Documents/react-project/src/components/MonsterStats.js":"14","/Users/bubba/Documents/react-project/src/pages/about.js":"15","/Users/bubba/Documents/react-project/src/pages/team.js":"16","/Users/bubba/Documents/RegistrationApp/my-app/src/index.js":"17","/Users/bubba/Documents/RegistrationApp/my-app/src/reportWebVitals.js":"18","/Users/bubba/Documents/RegistrationApp/my-app/src/Login.js":"19","/Users/bubba/Documents/RegistrationApp/my-app/src/user.js":"20","/Users/bubba/Documents/RegistrationApp/my-app/src/calendar.js":"21","/Users/bubba/Documents/RegistrationApp/my-app/src/cont.js":"22"},{"size":638,"mtime":1669787858009,"results":"23","hashOfConfig":"24"},{"size":487,"mtime":1669923546183,"results":"25","hashOfConfig":"24"},{"size":362,"mtime":1667573353379,"results":"26","hashOfConfig":"24"},{"size":21920,"mtime":1670251006591,"results":"27","hashOfConfig":"24"},{"size":697,"mtime":1669937501027,"results":"28","hashOfConfig":"24"},{"size":2165,"mtime":1669937657511,"results":"29","hashOfConfig":"24"},{"size":1737,"mtime":1670004610699,"results":"30","hashOfConfig":"24"},{"size":23779,"mtime":1669937661136,"results":"31","hashOfConfig":"24"},{"size":14409,"mtime":1670004610700,"results":"32","hashOfConfig":"24"},{"size":1098,"mtime":1669937501028,"results":"33","hashOfConfig":"24"},{"size":255,"mtime":1669937501025,"results":"34","hashOfConfig":"24"},{"size":607,"mtime":1670004610699,"results":"35","hashOfConfig":"24"},{"size":8127,"mtime":1669937657510,"results":"36","hashOfConfig":"24"},{"size":8473,"mtime":1669937595320,"results":"37","hashOfConfig":"24"},{"size":134,"mtime":1670004610700,"results":"38","hashOfConfig":"24"},{"size":1389,"mtime":1670004610701,"results":"39","hashOfConfig":"24"},{"size":640,"mtime":1677602579849,"results":"40","hashOfConfig":"41"},{"size":362,"mtime":1677602579849,"results":"42","hashOfConfig":"41"},{"size":1944,"mtime":1677602579848,"results":"43","hashOfConfig":"41"},{"size":4412,"mtime":1677602579850,"results":"44","hashOfConfig":"41"},{"size":1034,"mtime":1677682325557,"results":"45","hashOfConfig":"41"},{"size":294,"mtime":1677604536105,"results":"46","hashOfConfig":"41"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"y391no",{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"50"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"50"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"50"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103"},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"wo9fsn",{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/bubba/Documents/react-project/src/index.js",[],[],[],"/Users/bubba/Documents/react-project/src/App.js",["122"],[],"\nimport './App.css';\nimport React, {useState, useEffect} from 'react';\nimport Loader from './components/Loader';\nimport FCRouter from './components/FCRouter';\n\n\n\nfunction App() {\n\n  const [isLoading, setIsLoading] = useState(true)\n  useEffect(() => {\n    setTimeout(() => {\n      setIsLoading(false);\n    }, 3000);\n  })\n\n  return <>\n    <div className=\"App\">\n      { isLoading==true?\n        <Loader></Loader>:\n        <FCRouter></FCRouter>\n      }\n  </div>\n  </>\n}\n\nexport default App;\n","/Users/bubba/Documents/react-project/src/reportWebVitals.js",[],[],"/Users/bubba/Documents/react-project/src/arrays.js",[],[],"/Users/bubba/Documents/react-project/src/pages/landing.js",[],[],"/Users/bubba/Documents/react-project/src/pages/encounter.js",["123"],[],"import NavComp from '../components/NavComp';\nimport React, { useEffect, useState } from 'react';\nimport RandomMonster1 from '../randomMaster'; \nimport {randomMonsterInfo, randomLandMark, randomTreasure, randomVerb,randomNPCinfo, numberOfMonsters, NumberOfNPC, randomEffect} from \"../randomMaster\"\nimport RandomResult from \"./result\"\nimport useRandom from './useRandom';\n\nexport default function Encounter() {\n    \n    \n    const [level, setLevel ] = useState('1-5')\n\n    \n    const {isReady, verbs,setVerb, landmark,setLandMark,treasure,setTreasure,npc,setNPC, monster,setMonster,numberMonster,setNumberMonster,numberNPC,setNumberNPC,randomLandMarkEffect,setRandomEffect} = useRandom(level)\n\n    const clickHandle = event => {\n\n        event.preventDefault()\n        \n        RandomMonster1(level)\n        setVerb(randomVerb)\n        setLandMark(randomLandMark)\n        setMonster(randomMonsterInfo)\n        setTreasure(randomTreasure)\n        setNPC(randomNPCinfo)\n        setNumberNPC(NumberOfNPC)\n        setNumberMonster(numberOfMonsters)\n        setRandomEffect(randomEffect)\n\n    }\n    \n\n    return ( \n    <>\n        <NavComp></NavComp>\n        <div>\n            <form className=\"my-5\">\n            <label className=\"text-light\"> Select Difficulty:   \n                <select className=\"ms-2 difficulty\" name=\"level\" onChange={(e)=> setLevel(e.target.value)}>\n                    <option value= {null} >Select Level </option>\n                    <option value=\"1-5\">Levels 1-5</option>\n                    <option value=\"6-10\">Levels 6-10</option>\n                    <option value=\"11-15\">Levels 11-15</option>\n                </select>\n            </label>\n            <br />\n            <input className=\"button mt-5 px-4 py-2\" type=\"submit\" value=\"Generate Encounter\" onClick={clickHandle} />\n            </form>\n            <div className=\"addDisplay\">\n            {isReady ? <RandomResult verbs = {verbs} landmark={landmark} treasure={treasure} npc={npc} monster={monster} numberMonster={numberMonster} numberNPC={numberNPC} randomLandMarkEffect={randomLandMarkEffect} />: null}\n            </div>\n            \n        </div>\n        \n    </>\n    )\n  }\n","/Users/bubba/Documents/react-project/src/components/NavComp.js",[],[],"/Users/bubba/Documents/react-project/src/randomMaster.js",["124","125","126","127"],[],"import './App.css';\nimport React, { useState } from 'react';\n\nimport {character, treasure, landMarks, verb} from \"./arrays\"\n\n\nexport let numberOfMonsters\nexport let NumberOfNPC\nlet verb12 = 2\nexport let randomMonsterInfo //important\nexport let randomLandMark //important\nexport let randomTreasure //important \nexport let randomVerb // important\nexport let randomNPCinfo // important\nexport let randomEffect\nexport let decisionN\nexport let randomMonster\n\n\n//Getting Stats for Monsters\nexport let monsterSkills\nexport let monsterActions\nexport let monsterType\nexport let monsterSize\nexport let monsterAC\nexport let monsterHP\nexport let monsterSpeed\nexport let monsterStr\nexport let monsterDex\nexport let monsterCon\nexport let monsterInt\nexport let monsterWis\nexport let monsterCha\nexport let monsterLang\n\n\n//Getting Stats for NPCs\nexport let npcSkills\nexport let npcActions\nexport let npcType\nexport let npcSize\nexport let npcAC\nexport let npcHP\nexport let npcSpeed\nexport let npcStr\nexport let npcDex\nexport let npcCon\nexport let npcInt\nexport let npcWis\nexport let npcCha\nexport let npcLang\n\n//level 1-5\nasync function getDataMonster1_5() {\n    let decision = Math.floor(Math.random() *3+1)\n    randomMonster = character.monster.M1_5[Math.floor(Math.random()*character.monster.M1_5.length)] \n\n    let randomNPC = character.npc[Math.floor(Math.random()*character.npc.length)]\n    console.log(\"----------------------------------------------------\")\n    decisionN = decision\n    console.log(\"Level 1-5\")\n    if(decision === 1){\n        //Just NPC\n        const npc = await fetch(\"https://api.open5e.com/monsters/?challenge_rating=&armor_class=&type=&name=\"+randomNPC+\"&document=&document__slug=\"\n        ).then(result => result.json());\n        let rating = npc.results[0].challenge_rating\n        console.log(npc)\n        verb12 = 1\n\n        \n\n        randomMonster = null\n\n        if(rating === \"0\" || rating === \"1/8\" || rating === \"1/4\"){\n            NumberOfNPC = Math.floor(Math.random()*6+2);\n        }else if(rating === \"1/2\" || rating === \"1\"){\n            NumberOfNPC = Math.floor(Math.random()*3+1);\n        }else{\n            NumberOfNPC = 1\n        }\n        console.log(NumberOfNPC+\" \"+npc.results[0].name)\n        \n        randomNPCinfo = npc.results[0].name\n\n        // getting NPC stats\n        npcType = npc.results[0].type\n        npcSize = npc.results[0].size\n        npcAC = npc.results[0].armor_class\n        npcHP = npc.results[0].hit_points\n        npcSpeed = npc.results[0].speed.walk\n        npcStr = npc.results[0].strength\n        npcDex = npc.results[0].dexterity\n        npcCon = npc.results[0].constitution\n        npcInt = npc.results[0].intelligence\n        npcWis = npc.results[0].wisdom\n        npcCha = npc.results[0].charisma\n        npcLang = npc.results[0].languages\n        npcSkills = npc.results[0].special_abilities\n        npcActions = npc.results[0].actions\n\n        getDataVerb()\n        return npc\n\n    }else if(decision === 2){ \n        //Just Monster\n        const monster = await fetch(\"https://api.open5e.com/monsters/?challenge_rating=&armor_class=&type=&name=\"+randomMonster+\"&document=&document__slug=\"\n        ).then(result => result.json());\n        console.log(monster)\n\n        // getting stats\n        monsterType = monster.results[0].type\n        monsterSize = monster.results[0].size\n        monsterAC = monster.results[0].armor_class\n        monsterHP = monster.results[0].hit_points\n        monsterSpeed = monster.results[0].speed.walk\n        monsterStr = monster.results[0].strength\n        monsterDex = monster.results[0].dexterity\n        monsterCon = monster.results[0].constitution\n        monsterInt = monster.results[0].intelligence\n        monsterWis = monster.results[0].wisdom\n        monsterCha = monster.results[0].charisma\n        monsterLang = monster.results[0].languages\n        monsterActions = monster.results[0].actions\n        monsterSkills = monster.results[0].special_abilities\n\n        let rating = monster.results[0].challenge_rating\n        verb12=2\n\n        if(rating === \"1/4\"){\n            console.log(\"1/4\")\n            numberOfMonsters = Math.floor(Math.random()*6+2)\n        }else if(rating === \"1/2\"){\n            console.log(\"1/2\")\n            numberOfMonsters = Math.floor(Math.random()*2+1)\n        }else if(rating === \"1\"){\n            numberOfMonsters = 1\n        }\n\n\n        console.log(numberOfMonsters+\" \"+monster.results[0].name)\n        randomMonsterInfo = monster.results[0].name\n        console.log(randomMonsterInfo)\n        getDataVerb()\n        return monster\n\n\n    } else if (decision === 3){\n        //Both\n        const monster = await fetch(\"https://api.open5e.com/monsters/?challenge_rating=&armor_class=&type=&name=\"+randomMonster+\"&document=&document__slug=\"\n        ).then(result => result.json());\n        const npc = await fetch(\"https://api.open5e.com/monsters/?challenge_rating=&armor_class=&type=&name=\"+randomNPC+\"&document=&document__slug=\"\n        ).then(result => result.json());\n\n        let ratingM = monster.results[0].challenge_rating\n        let ratingNPC = npc.results[0].challenge_rating\n        verb12 = 2\n\n\n        \n\n        if(ratingNPC === \"0\" || ratingNPC === \"1/8\" || ratingNPC === \"1/4\"){\n            NumberOfNPC = Math.floor(Math.random()*6+2);\n        }\n        else if(ratingNPC === \"1/2\" || ratingNPC === \"1\"){\n            NumberOfNPC = Math.floor(Math.random()*3+1);\n        }\n        else{\n            NumberOfNPC = 1\n        }\n\n        console.log(npc)\n        console.log(NumberOfNPC+\" \"+npc.results[0].name)\n        getDataVerb()\n\n        if(ratingM === \"1/4\"){\n            numberOfMonsters = Math.floor(Math.random()*6+2)\n        }else if(ratingM === \"1/2\"){\n            numberOfMonsters = Math.floor(Math.random()*2+1)\n        }else if(ratingM === \"1\"){\n            numberOfMonsters = 1\n        }\n        console.log(monster)\n\n        // getting stats\n        monsterType = monster.results[0].type\n        monsterSize = monster.results[0].size\n        monsterAC = monster.results[0].armor_class\n        monsterHP = monster.results[0].hit_points\n        monsterSpeed = monster.results[0].speed.walk\n        monsterStr = monster.results[0].strength\n        monsterDex = monster.results[0].dexterity\n        monsterCon = monster.results[0].constitution\n        monsterInt = monster.results[0].intelligence\n        monsterWis = monster.results[0].wisdom\n        monsterCha = monster.results[0].charisma\n        monsterLang = monster.results[0].languages\n        monsterSkills = monster.results[0].special_abilities\n        monsterActions = monster.results[0].actions\n\n\n        console.log(\"1 \"+monster.results[0].name)\n        \n        randomMonsterInfo =monster.results[0].name\n        randomNPCinfo = npc.results[0].name\n        \n        // Getting NPC stats\n        npcType = npc.results[0].type\n        npcSize = npc.results[0].size\n        npcAC = npc.results[0].armor_class\n        npcHP = npc.results[0].hit_points\n        npcSpeed = npc.results[0].speed.walk\n        npcStr = npc.results[0].strength\n        npcDex = npc.results[0].dexterity\n        npcCon = npc.results[0].constitution\n        npcInt = npc.results[0].intelligence\n        npcWis = npc.results[0].wisdom\n        npcCha = npc.results[0].charisma\n        npcLang = npc.results[0].languages\n        npcSkills = npc.results[0].special_abilities\n        npcActions = npc.results[0].actions\n\n\n        getDataVerb()\n        return monster + \" \" + npc\n\n    }\n    \n    \n}\nfunction getDataTreasure1_5(){\n    randomTreasure = treasure.One_Five[Math.floor(Math.random()*treasure.One_Five.length)]\n    console.log(randomTreasure)\n}\n\n//level 6-10\nasync function getDataMonster6_10() {\n    let decision =Math.floor(Math.random() *3+1)\n    let randomMonster =character.monster.M6_10[Math.floor(Math.random()*character.monster.M6_10.length)] \n    let randomNPC = character.npc[Math.floor(Math.random()*character.npc.length)]\n    console.log(\"----------------------------------------------------\")\n    console.log(\"Level 6-10\")\n    if(decision === 1){\n        //Just NPC\n        const npc = await fetch(\"https://api.open5e.com/monsters/?challenge_rating=&armor_class=&type=&name=\"+randomNPC+\"&document=&document__slug=\"\n        ).then(result => result.json());\n        let rating = npc.results[0].challenge_rating\n        console.log(npc)\n        verb12 = 1\n        \n        randomMonster = null\n\n        if(rating === \"0\" || rating === \"1/8\" || rating === \"1/4\"){\n            NumberOfNPC = Math.floor(Math.random()*6+4);\n        }else if(rating === \"1/2\" || rating === \"1\"){\n            NumberOfNPC = Math.floor(Math.random()*3+2);\n        }else if(rating === \"2\" || rating === \"3\" || rating === \"4\"){\n            NumberOfNPC = Math.floor(Math.random()*2+1);\n        }else{\n            NumberOfNPC = 1\n        }\n\n        randomNPCinfo = npc.results[0].name\n        \n        npcType = npc.results[0].type\n        npcSize = npc.results[0].size\n        npcAC = npc.results[0].armor_class\n        npcHP = npc.results[0].hit_points\n        npcSpeed = npc.results[0].speed.walk\n        npcStr = npc.results[0].strength\n        npcDex = npc.results[0].dexterity\n        npcCon = npc.results[0].constitution\n        npcInt = npc.results[0].intelligence\n        npcWis = npc.results[0].wisdom\n        npcCha = npc.results[0].charisma\n        npcLang = npc.results[0].languages\n        npcSkills = npc.results[0].special_abilities\n        npcActions = npc.results[0].actions\n\n        console.log(NumberOfNPC+\" \"+npc.results[0].name)\n        getDataVerb()\n        return npc\n\n    }else if(decision === 2){ \n        //Just Monster\n        const monster = await fetch(\"https://api.open5e.com/monsters/?challenge_rating=&armor_class=&type=&name=\"+randomMonster+\"&document=&document__slug=\"\n        ).then(result => result.json());\n        console.log(monster)\n\n        // getting stats\n        monsterType = monster.results[0].type\n        monsterSize = monster.results[0].size\n        monsterAC = monster.results[0].armor_class\n        monsterHP = monster.results[0].hit_points\n        monsterSpeed = monster.results[0].speed.walk\n        monsterStr = monster.results[0].strength\n        monsterDex = monster.results[0].dexterity\n        monsterCon = monster.results[0].constitution\n        monsterInt = monster.results[0].intelligence\n        monsterWis = monster.results[0].wisdom\n        monsterCha = monster.results[0].charisma\n        monsterLang = monster.results[0].languages\n        monsterSkills = monster.results[0].special_abilities\n        monsterActions = monster.results[0].actions\n\n        let rating = monster.results[0].challenge_rating\n        verb12=2\n\n        if(rating === \"1\"){\n            numberOfMonsters = Math.floor(Math.random()*5+4)\n        }else if(rating === \"2\"){\n            numberOfMonsters = Math.floor(Math.random()*3+1)\n        }else if(rating === \"3\"){\n            numberOfMonsters = Math.floor(Math.random()*5+1)\n        }else if(rating === \"4\"){\n            numberOfMonsters = Math.floor(Math.random()*2+1)\n        }else if(rating === \"5\"){\n            numberOfMonsters = Math.floor(Math.random()*2+1)\n        }else if(rating === \"6\"){\n            numberOfMonsters = Math.floor(Math.random()*1+1)\n        }else if(rating === \"7\"){\n            numberOfMonsters = Math.floor(Math.random()*1+1)\n        }\n\n        console.log(numberOfMonsters+\" \"+monster.results[0].name)\n        randomMonsterInfo =monster.results[0].name\n\n        getDataVerb()\n        return monster\n\n\n    } else if (decision === 3){\n        //Both\n        const monster = await fetch(\"https://api.open5e.com/monsters/?challenge_rating=&armor_class=&type=&name=\"+randomMonster+\"&document=&document__slug=\"\n        ).then(result => result.json());\n        const npc = await fetch(\"https://api.open5e.com/monsters/?challenge_rating=&armor_class=&type=&name=\"+randomNPC+\"&document=&document__slug=\"\n        ).then(result => result.json());\n\n        let ratingM = monster.results[0].challenge_rating\n        let ratingNPC = npc.results[0].challenge_rating\n        verb12 = 2\n\n\n        \n\n        if(ratingNPC === \"0\" || ratingNPC === \"1/8\" || ratingNPC === \"1/4\"){\n            NumberOfNPC = Math.floor(Math.random()*6+2);\n        }\n        else if(ratingNPC === \"1/2\" || ratingNPC === \"1\"){\n            NumberOfNPC = Math.floor(Math.random()*3+1);\n        }\n        else{\n            NumberOfNPC = 1\n        }\n\n        console.log(npc)\n        console.log(NumberOfNPC+\" \"+npc.results[0].name)\n        getDataVerb()\n\n        if(ratingM === \"1\"){\n            numberOfMonsters = Math.floor(Math.random()*5+4)\n        }else if(ratingM === \"2\"){\n            numberOfMonsters = Math.floor(Math.random()*3+1)\n        }else if(ratingM === \"3\"){\n            numberOfMonsters = Math.floor(Math.random()*5+1)\n        }else if(ratingM === \"4\"){\n            numberOfMonsters = Math.floor(Math.random()*2+1)\n        }else if(ratingM === \"5\"){\n            numberOfMonsters = Math.floor(Math.random()*2+1)\n        }else if(ratingM === \"6\"){\n            numberOfMonsters = Math.floor(Math.random()*1+1)\n        }else if(ratingM === \"7\"){\n            numberOfMonsters = Math.floor(Math.random()*1+1)\n        }\n        console.log(monster)\n        console.log(\"1 \"+monster.results[0].name)\n\n        // getting stats\n        monsterType = monster.results[0].type\n        monsterSize = monster.results[0].size\n        monsterAC = monster.results[0].armor_class\n        monsterHP = monster.results[0].hit_points\n        monsterSpeed = monster.results[0].speed.walk\n        monsterStr = monster.results[0].strength\n        monsterDex = monster.results[0].dexterity\n        monsterCon = monster.results[0].constitution\n        monsterInt = monster.results[0].intelligence\n        monsterWis = monster.results[0].wisdom\n        monsterCha = monster.results[0].charisma\n        monsterLang = monster.results[0].languages\n        monsterSkills = monster.results[0].special_abilities\n        monsterActions = monster.results[0].actions\n        \n        randomMonsterInfo =monster.results[0].name\n        randomNPCinfo = npc.results[0].name\n        \n        npcType = npc.results[0].type\n        npcSize = npc.results[0].size\n        npcAC = npc.results[0].armor_class\n        npcHP = npc.results[0].hit_points\n        npcSpeed = npc.results[0].speed.walk\n        npcStr = npc.results[0].strength\n        npcDex = npc.results[0].dexterity\n        npcCon = npc.results[0].constitution\n        npcInt = npc.results[0].intelligence\n        npcWis = npc.results[0].wisdom\n        npcCha = npc.results[0].charisma\n        npcLang = npc.results[0].languages\n        npcSkills = npc.results[0].special_abilities\n        npcActions = npc.results[0].actions\n\n        getDataVerb()\n        return monster + \" \" + npc\n\n    }\n    \n    \n}\nfunction getDataTreasure6_10(){\n    randomTreasure = treasure.Six_Ten[Math.floor(Math.random()*treasure.Six_Ten.length)]\n    console.log(randomTreasure)\n}\n\n//level 11-15\nasync function getDataMonster11_15() {\n    let decision = Math.floor(Math.random() *3+1)\n    randomMonster = character.monster.M11_15[Math.floor(Math.random()*character.monster.M11_15.length)] \n    let randomNPC = character.npc[Math.floor(Math.random()*character.npc.length)]\n    console.log(\"----------------------------------------------------\")\n\n    console.log(\"Level 11-15\")\n    if(decision === 1){\n        //Just NPC\n        const npc = await fetch(\"https://api.open5e.com/monsters/?challenge_rating=&armor_class=&type=&name=\"+randomNPC+\"&document=&document__slug=\"\n        ).then(result => result.json());\n        let rating = npc.results[0].challenge_rating\n        console.log(npc)\n        verb12 = 1\n\n        randomMonster = null\n\n        if(rating === \"0\" || rating === \"1/8\" || rating === \"1/4\",rating === \"1/2\" || rating === \"1\"){\n            NumberOfNPC = Math.floor(Math.random()*6+9);\n        }else if(rating === \"2\" || rating === \"3\"|| rating === \"3\"){\n            NumberOfNPC = Math.floor(Math.random()*6+4);\n        }else{\n            NumberOfNPC = 3\n        }\n        console.log(NumberOfNPC+\" \"+npc.results[0].name)\n\n        randomNPCinfo = npc.results[0].name\n        \n        npcType = npc.results[0].type\n        npcSize = npc.results[0].size\n        npcAC = npc.results[0].armor_class\n        npcHP = npc.results[0].hit_points\n        npcSpeed = npc.results[0].speed.walk\n        npcStr = npc.results[0].strength\n        npcDex = npc.results[0].dexterity\n        npcCon = npc.results[0].constitution\n        npcInt = npc.results[0].intelligence\n        npcWis = npc.results[0].wisdom\n        npcCha = npc.results[0].charisma\n        npcLang = npc.results[0].languages\n        npcSkills = npc.results[0].special_abilities\n        npcActions = npc.results[0].actions\n\n        getDataVerb()\n        return npc\n\n    }else if(decision === 2){ \n        //Just Monster\n        const monster = await fetch(\"https://api.open5e.com/monsters/?challenge_rating=&armor_class=&type=&name=\"+randomMonster+\"&document=&document__slug=\"\n        ).then(result => result.json());\n        console.log(monster)\n\n        // getting stats\n        monsterType = monster.results[0].type\n        monsterSize = monster.results[0].size\n        monsterAC = monster.results[0].armor_class\n        monsterHP = monster.results[0].hit_points\n        monsterSpeed = monster.results[0].speed.walk\n        monsterStr = monster.results[0].strength\n        monsterDex = monster.results[0].dexterity\n        monsterCon = monster.results[0].constitution\n        monsterInt = monster.results[0].intelligence\n        monsterWis = monster.results[0].wisdom\n        monsterCha = monster.results[0].charisma\n        monsterLang = monster.results[0].languages\n        monsterSkills = monster.results[0].special_abilities\n        monsterActions = monster.results[0].actions\n\n        let rating = monster.results[0].challenge_rating\n        verb12=2\n\n        if(rating === \"5\"){\n            \n            numberOfMonsters = Math.floor(Math.random()*2+3)\n        }else if(rating === \"6\"){\n            numberOfMonsters = Math.floor(Math.random()*3+1)\n        }else if(rating === \"7\"){\n            numberOfMonsters = Math.floor(Math.random()*3+1)\n        }else if(rating === \"8\"){\n            numberOfMonsters = Math.floor(Math.random()*2+1)\n        }else if(rating === \"9\"){\n            numberOfMonsters = Math.floor(Math.random()*2+1)\n        }else if(rating === \"10\"){\n            numberOfMonsters = 1\n        }else if(rating === \"11\"){\n            numberOfMonsters = 1\n        }else if(rating === \"12\"){\n            numberOfMonsters = 1\n        }else if(rating === \"13\"){\n            numberOfMonsters = 1\n        }else if(rating === \"14\"){\n            numberOfMonsters = 1\n        }else if(rating === \"15\"){\n            numberOfMonsters = 1\n        }\n\n        console.log(numberOfMonsters+\" \"+monster.results[0].name)\n\n        randomMonsterInfo =monster.results[0].name\n\n        getDataVerb()\n        return monster\n\n\n    } else if (decision === 3){\n        //Both\n        const monster = await fetch(\"https://api.open5e.com/monsters/?challenge_rating=&armor_class=&type=&name=\"+randomMonster+\"&document=&document__slug=\"\n        ).then(result => result.json());\n        const npc = await fetch(\"https://api.open5e.com/monsters/?challenge_rating=&armor_class=&type=&name=\"+randomNPC+\"&document=&document__slug=\"\n        ).then(result => result.json());\n\n        let ratingM = monster.results[0].challenge_rating\n        let ratingNPC = npc.results[0].challenge_rating\n        verb12 = 2\n\n\n        \n\n        if(ratingNPC === \"0\" || ratingNPC === \"1/8\" || ratingNPC === \"1/4\",ratingNPC === \"1/2\" || ratingNPC === \"1\"){\n            NumberOfNPC = Math.floor(Math.random()*6+9);\n        }else if(ratingNPC === \"2\" || ratingNPC === \"3\"|| ratingNPC === \"3\"){\n            NumberOfNPC = Math.floor(Math.random()*6+4);\n        }else{\n            NumberOfNPC = 3\n        }\n\n        console.log(npc)\n        console.log(NumberOfNPC+\" \"+npc.results[0].name)\n        getDataVerb()\n\n        if(ratingM === \"5\"){\n            \n            numberOfMonsters = Math.floor(Math.random()*2+3)\n        }else if(ratingM === \"6\"){\n            numberOfMonsters = Math.floor(Math.random()*3+1)\n        }else if(ratingM === \"7\"){\n            numberOfMonsters = Math.floor(Math.random()*3+1)\n        }else if(ratingM === \"8\"){\n            numberOfMonsters = Math.floor(Math.random()*2+1)\n        }else if(ratingM === \"9\"){\n            numberOfMonsters = Math.floor(Math.random()*2+1)\n        }else if(ratingM === \"10\"){\n            numberOfMonsters = 1\n        }else if(ratingM === \"11\"){\n            numberOfMonsters = 1\n        }else if(ratingM === \"12\"){\n            numberOfMonsters = 1\n        }else if(ratingM === \"13\"){\n            numberOfMonsters = 1\n        }else if(ratingM === \"14\"){\n            numberOfMonsters = 1\n        }else if(ratingM === \"15\"){\n            numberOfMonsters = 1\n        }\n        console.log(monster)\n        console.log(\"1 \"+monster.results[0].name)\n        \n\n        //Getting Stats\n        monsterType = monster.results[0].type\n        monsterSize = monster.results[0].size\n        monsterAC = monster.results[0].armor_class\n        monsterHP = monster.results[0].hit_points\n        monsterSpeed = monster.results[0].speed.walk\n        monsterStr = monster.results[0].strength\n        monsterDex = monster.results[0].dexterity\n        monsterCon = monster.results[0].constitution\n        monsterInt = monster.results[0].intelligence\n        monsterWis = monster.results[0].wisdom\n        monsterCha = monster.results[0].charisma\n        monsterLang = monster.results[0].languages\n        monsterSkills = monster.results[0].special_abilities\n        monsterActions = monster.results[0].actions\n        \n        randomMonsterInfo =monster.results[0].name\n        randomNPCinfo = npc.results[0].name\n\n        npcType = npc.results[0].type\n        npcSize = npc.results[0].size\n        npcAC = npc.results[0].armor_class\n        npcHP = npc.results[0].hit_points\n        npcSpeed = npc.results[0].speed.walk\n        npcStr = npc.results[0].strength\n        npcDex = npc.results[0].dexterity\n        npcCon = npc.results[0].constitution\n        npcInt = npc.results[0].intelligence\n        npcWis = npc.results[0].wisdom\n        npcCha = npc.results[0].charisma\n        npcLang = npc.results[0].languages\n        npcSkills = npc.results[0].special_abilities\n        npcActions = npc.results[0].actions\n\n        getDataVerb()\n        return monster + \" \" + npc\n\n    }\n    \n    \n}\nfunction getDataTreasure11_15(){\n    randomTreasure = treasure.Eleven_Fifteen[Math.floor(Math.random()*treasure.Eleven_Fifteen.length)]\n    console.log(randomTreasure)\n}\n\n//All Levels\nfunction getDataLandMarks(){\n    let r = landMarks.all[Math.floor(Math.random()*landMarks.all.length)]\n    randomLandMark = r.main\n    randomEffect = r.Effect \n    console.log(randomLandMark)\n}\nfunction getDataVerb(){\n    \n    if(verb12 === 1){\n        randomVerb = verb.humanoid[Math.floor(Math.random()*verb.humanoid.length)]\n        console.log(randomVerb)\n    }else if(verb12 === 2){\n        randomVerb = verb.all[Math.floor(Math.random()*verb.all.length)]\n        console.log(randomVerb)\n\n    }\n    \n}\n\n\n\nasync function RandomMonster1(level){\n    \n    if(level === \"1-5\"){\n        await Promise.all([getDataMonster1_5(),\n        getDataLandMarks(),\n        getDataTreasure1_5()])\n    }else if(level === \"6-10\"){\n        await Promise.all([\n            getDataMonster6_10(),\n            getDataLandMarks(),\n            getDataTreasure6_10()\n        ])\n\n    } else if(level === \"11-15\"){\n        await Promise.all([\n            getDataMonster11_15(),\n            getDataLandMarks(),\n            getDataTreasure11_15()\n        ])\n    }\n}\n\n\n\nexport default RandomMonster1; \n \n","/Users/bubba/Documents/react-project/src/pages/result.js",["128","129","130","131"],[],"import React, { useState, useEffect } from 'react';\nimport Collapse from 'react-bootstrap/Collapse';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nimport { decisionN, npcType, npcSize, monsterType, monsterSize } from '../randomMaster';\nimport { verb } from '../arrays';\n\n// Importing Stat Blocks\nimport MonsterStats from '../components/MonsterStats'\nimport NpcStats from '../components/NpcStats'\n\n\n// Importing Image Icons\nimport MonsterImage from \"../assets/MPaw.png\"\nimport MGoblinoid from \"../assets/MGoblinoid.png\"\nimport MUndead from \"../assets/MUndead.png\"\nimport MArmor from \"../assets/MArmor.png\"\nimport MSpider from \"../assets/MSpider.png\"\nimport MDwarf from \"../assets/MDwarf.png\"\nimport MBoar from \"../assets/MBoar.png\"\nimport MWolf from \"../assets/MWolf.png\"\nimport MOoze from \"../assets/MOoze.png\"\nimport MScorp from \"../assets/MScorp.png\"\nimport MWing from \"../assets/MWing.png\"\nimport MLamp from \"../assets/MLamp.png\"\nimport MHoof from \"../assets/MHoof.png\"\nimport MDragon from \"../assets/MDragon.png\"\nimport MWorm from \"../assets/MWorm.png\"\nimport MOrc from \"../assets/MOrc.png\"\nimport MLeaf from \"../assets/MLeaf.png\"\n\nimport NFighter from \"../assets/NFighter.png\"\nimport NNormie from \"../assets/NNormie.png\"\nimport NStaff from \"../assets/NStaff.png\"\nimport NThug from \"../assets/NThug.png\"\nimport NRogue from \"../assets/NRogue.png\"\n\nlet new_verb = verb.humanoid[Math.floor(Math.random()*verb.humanoid.length)]\nexport default function RandomResult({verbs, landmark,treasure,npc, monster,numberMonster,numberNPC,randomLandMarkEffect}){\n    const [open, setOpen] = useState(false);\n    new_verb = verb.humanoid[Math.floor(Math.random()*verb.humanoid.length)]\n\n// GENERATING MONSTER ICONS\n    \n    const [imageURL, setImageURL] = useState(MDragon)\n\n    useEffect( () => {\n        if (monster === 'Boar' || monster === 'Wereboar') \n            setImageURL(MBoar)\n\n        else if (monster === 'Panther' || monster === 'Tiger' || monster === 'Brown Bear' || monster === 'Black Bear' || monster === \"Werebear\" || monster === \"Weretiger\" || monster === \"Bearfolk\")\n            setImageURL(MonsterImage)\n\n        else if (monster === 'Wolf' || monster === 'Dire Wolf' || monster === 'Gnoll'|| monster === 'Werewolf')\n            setImageURL(MWolf)\n\n        else if (monster === 'Goblin' || monster === 'Hobgoblin' || monster === 'Bugbear' || monster === \"Fire Imp\" || monster === 'Imp' || monster === \"Wererat\" || monster === 'Chain Devil')\n            setImageURL(MGoblinoid)\n\n        else if (monster === 'Skeleton' || monster === 'Zombie' || monster === 'Ghast' || monster === 'Mummy' || monster === 'Ghost' || monster === 'Vampire' || monster === 'Wraith' || monster === 'Bone Devil' || monster === 'Mummy Lord')\n            setImageURL(MUndead)\n\n        else if (monster === 'Animated Armor' || monster === 'Shield Guardian')\n            setImageURL(MArmor)\n\n        else if (monster === 'Gray Ooze' || monster === \"Rug of Smothering\")\n            setImageURL(MOoze)\n\n        else if (monster === 'Orc' || monster === \"Troll\" || monster === 'Ogre' || monster === 'Stone Giant' || monster === 'Hill Giant' || monster === 'Clay Golem' || monster === 'Frost Giant' || monster === 'Storm Giant')\n            setImageURL(MOrc)\n\n        else if (monster === 'Air Elemental' || monster === 'Earth Elemental' || monster === 'Fire Elemental' || monster === 'Djinni')\n            setImageURL(MLamp)\n\n        else if (monster === 'Pegasus' || monster === 'Griffon' || monster === 'Harpy' || monster === 'Manticore' || monster === 'Roc')\n            setImageURL(MWing)\n\n        else if (monster === 'Giant Goat' || monster === 'Centaur' || monster === \"Minotaur Skeleton\" || monster === 'Minotaur' || monster === 'Unicorn')\n            setImageURL(MHoof)\n\n        else if (monster === 'Lizardfolk' || monster === 'White Dragon Wyrmling' || monster === 'Red Dragon Wyrmling' || monster === 'Wyvern' || monster === 'Young Black Dragon' || monster === 'Young Bronze Dragon' || monster === 'Young Silver Dragon' || monster === 'Young Gold Dragon' || monster === 'Adult Black Dragon' || monster === 'Adult Bronze Dragon' || monster === 'Adult Green Dragon' || monster === 'Adult Copper Dragon' || monster === 'Adult Brass Dragon')\n            setImageURL(MDragon)\n\n        else if (monster === 'Bearded Devil' || monster === 'Duergar')\n            setImageURL(MDwarf)\n\n        else if (monster === 'Giant Spider' || monster === 'Drider')\n            setImageURL(MSpider)\n\n        else if (monster === 'Purple Worm' || monster === 'Grick' || monster === 'Naga Guardian')\n            setImageURL(MWorm)\n\n        else if (monster === 'Giant Ant' || monster === 'Giant Scorpion')\n            setImageURL(MScorp)\n\n        else if (monster === 'Dryad' || monster === 'Awakened Tree')\n            setImageURL(MLeaf)\n\n        }, \n            [monster]\n    ) \n\n// GENERATING NPC ICONS\n    const [NPCImageURL, setNPCImageURL] = useState(NStaff)\n\n    useEffect( () => {\n        if (npc === 'Spy' || npc === 'Corpse Thief' || npc === 'Scout' || npc === 'Assassin' || npc === 'Cult Fanatic') \n            setNPCImageURL(NRogue)\n        else if (npc === 'Mage' || npc === 'Druid' || npc === 'Cultist' || npc === 'Priest' || npc === 'Tribal Warrior')\n            setNPCImageURL(NStaff)\n        else if (npc === 'Commoner' || npc === 'Noble')\n            setNPCImageURL(NNormie)\n        else if (npc === 'Berserker' || npc === 'Guard' || npc === 'Gladiator' || npc === 'Knight' || npc === 'Veteran')\n            setNPCImageURL(NFighter)\n        else if (npc === 'Thug' || npc === 'Bandit Captain' || npc === 'Bandit')\n            setNPCImageURL(NThug)\n        else if (npc === 'Half-Red Dragon Veteran')\n            setNPCImageURL(MDragon)\n        }, \n            [npc]\n    ) \n\n    if(decisionN === 1){\n        let landEffect\n\n        if(randomLandMarkEffect === null){\n            landEffect = \"none\"\n        }else{\n            landEffect = randomLandMarkEffect\n        }\n        return  (\n            <Container>\n                    <Row>\n                        <Col lg={{ span: 6, offset: 3 }}>\n                            <div className=\"holder mb-4\">\n                                <div className=\"d-flex\">\n                                    <img src={NPCImageURL} width=\"120px\" />\n                                    <div className=\"w-100 mx-3 mt-1\">\n                                        <div className=\"d-flex justify-content-between\">\n                                            <h1 className=\"text-light\">{npc}</h1>\n                                            <span\n                                            onClick={() => setOpen(!open)}\n                                            aria-controls=\"example-collapse-text\"\n                                            aria-expanded={open}\n                                            className=\"text-light\"\n                                        ><i className=\"bi bi-chevron-down\"></i></span>\n                                        </div>\n                                        <div className=\"text-light fst-italic d-flex\">\n                                            <span>{npcSize} {npcType}</span>\n                                        </div>\n                                    </div>\n                                </div>\n                                <Collapse in={open}>\n                                    <div id=\"example-collapse-text\" className=\"text-light\">\n                                    <NpcStats></NpcStats>\n                                    </div>\n                                </Collapse>\n                            </div>\n                        </Col>\n                    </Row>\n                    <Row className='text-light'>\n                        <Col lg={{ span: 6, offset: 3 }}>\n                            <p className=\"text-start\">There are {numberNPC} {npc} at {landmark} The {npc} is {verbs}</p> \n                            <p className=\"text-start\">Landmark Effect: {landEffect}</p>\n                            <p>Treasure: {treasure} {}</p>\n                        </Col>\n                    </Row>\n            </Container>\n        )\n\n    }else if(decisionN === 2){\n        let landEffect\n        if(randomLandMarkEffect === null){\n            landEffect = \"none\"\n        }else{\n            landEffect = randomLandMarkEffect\n        }\n        return(\n            <Container>\n                <Row>\n                    <Col lg={{ span: 6, offset: 3 }}>\n                        <div className=\"holder mb-4\">\n                            <div className=\"d-flex\">\n                             <img src={imageURL} width=\"120px\" />\n                                <div className=\"w-100 mx-3 mt-1\">\n                                    <div className=\"d-flex justify-content-between\">\n                                        <h1 className=\"text-light\">{monster}</h1>\n                                        <span\n                                        onClick={() => setOpen(!open)}\n                                        aria-controls=\"example-collapse-text\"\n                                        aria-expanded={open}\n                                        className=\"text-light\"\n                                    ><i className=\"bi bi-chevron-down\"></i></span>\n                                    </div>\n                                    <div className=\"text-light fst-italic d-flex\">\n                                        <span>{monsterSize} {monsterType}</span>\n                                    </div>\n                                </div>\n                            </div>\n                            <Collapse in={open}>\n                                <div id=\"example-collapse-text\" className=\"text-light\">\n                                <MonsterStats></MonsterStats>\n                                </div>\n                            </Collapse>\n                        </div>\n                    </Col>\n                </Row>\n                <Row className='text-light'>\n                    <Col lg={{ span: 6, offset: 3 }}>\n                        <p className=\"text-start\">They are {numberMonster} {monster} at {landmark} The {monster} is {verbs}</p> \n                        <p className=\"text-start\">Landmark Effect: {landEffect}</p>\n                        <p>Treasure: {treasure} {}</p>\n                    </Col>\n                </Row>\n            </Container>\n        )\n\n    }else if(decisionN === 3){\n        let landEffect\n        \n        if(randomLandMarkEffect === null){\n            landEffect = \"none\"\n        }else{\n            landEffect = randomLandMarkEffect\n        }\n        return (\n            <Container>\n                <Row>\n                    <Col lg={{ span: 6, offset: 3 }}>\n                        <div className=\"holder mb-4\">\n                            <div className=\"d-flex\">\n                            <img src={imageURL} width=\"120px\" />\n                                <div className=\"w-100 mx-3 mt-1\">\n                                    <div className=\"d-flex justify-content-between\">\n                                        <h1 className=\"text-light\">{monster}</h1>\n                                        <span\n                                        onClick={() => setOpen(!open)}\n                                        aria-controls=\"example-collapse-text\"\n                                        aria-expanded={open}\n                                        className=\"text-light\"\n                                    ><i className=\"bi bi-chevron-down\"></i></span>\n                                    </div>\n                                    <div className=\"text-light fst-italic d-flex\">\n                                        <span>{monsterSize} {monsterType}</span>\n                                    </div>\n                                </div>\n                            </div>\n                            <Collapse in={open}>\n                            \n                                <div id=\"example-collapse-text\" className=\"text-light\">\n                                <MonsterStats></MonsterStats>\n                                </div>\n                            </Collapse>\n                        </div>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col lg={{ span: 6, offset: 3 }}>\n                        <div className=\"holder mb-4\">\n                            <div className=\"d-flex\">\n                                <img src={NPCImageURL} width=\"120px\" />\n                                <div className=\"w-100 mx-3 mt-1\">\n                                    <div className=\"d-flex justify-content-between\">\n                                        <h1 className=\"text-light\">{npc}</h1>\n                                        <span\n                                        onClick={() => setOpen(!open)}\n                                        aria-controls=\"example-collapse-text\"\n                                        aria-expanded={open}\n                                        className=\"text-light\"\n                                    ><i className=\"bi bi-chevron-down\"></i></span>\n                                    </div>\n                                    <div className=\"text-light fst-italic d-flex\">\n                                        <span>{npcSize} {npcType}</span>\n                                    </div>\n                                </div>\n                            </div>\n                            <Collapse in={open}>\n                            \n                                <div id=\"example-collapse-text\" className=\"text-light\">\n                                <NpcStats></NpcStats>\n                                </div>\n                            </Collapse>\n                        </div>\n                    </Col>\n                </Row>\n                <Row className='text-light'>\n                    <Col lg={{ span: 6, offset: 3 }}>\n                        <p className=\"text-start\">There is {numberNPC} {npc} and {numberMonster} {monster} at {landmark}. The {monster} is {verbs} and the {npc} is {new_verb}</p> \n                        <p className=\"text-start\">Landmark Effect: {landEffect}</p>\n                        <p>Treasure: {treasure}</p>\n                    </Col>\n                </Row>\n            </Container>\n        )\n    }\n}","/Users/bubba/Documents/react-project/src/pages/useRandom.js",["132"],[],"import React, { useEffect, useState } from 'react';\nimport RandomMonster1, {randomMonsterInfo, randomLandMark, randomTreasure, randomVerb,randomNPCinfo, numberOfMonsters, NumberOfNPC, randomEffect} from \"../randomMaster\"\n\nexport default function useRandom(level){\n    const [isReady, setIsReady] = useState();\n    const [verbs, setVerb] = useState()\n    const [landmark, setLandMark] =useState()\n    const [treasure, setTreasure] =useState()\n    const [npc, setNPC] =useState()\n    const [monster, setMonster] =useState()\n    const [numberMonster, setNumberMonster] =useState()\n    const [numberNPC, setNumberNPC] =useState()\n    const [randomLandMarkEffect, setRandomEffect] =useState()\n\n    const init = async () => {\n        if(level) {\n            await RandomMonster1(level);\n            setIsReady(true)\n        }\n    }\n\n    useEffect(() => {\n        init();\n    }, [])\n\n    return(\n        {isReady, verbs,setVerb, landmark,setLandMark,treasure,setTreasure,npc,setNPC, monster,setMonster,numberMonster,setNumberMonster,numberNPC,setNumberNPC,randomLandMarkEffect,setRandomEffect}\n    )\n}\n\n\n\n","/Users/bubba/Documents/react-project/src/components/Loader.jsx",["133","134"],[],"import React from 'react'\nimport Spinner from '../assets/FCSpinner.png'\n\n\nconst Loader = () => {\n    return (\n        <div className=\"loading-screen\">\n            <img className=\"spinner\" src={Spinner}></img>\n        </div>\n    )\n}\n\nexport default Loader;","/Users/bubba/Documents/react-project/src/components/FCRouter.js",["135"],[],"\nimport { BrowserRouter as Router, Link, Route, Routes } from \"react-router-dom\";\nimport Landing from \"../pages/landing\" ;\nimport Encounter from \"../pages/encounter\" ;\nimport About from \"../pages/about\"\nimport Team from \"../pages/team\"\n\nexport default function FCRouter() {\n\n  return <>\n        <Router>\n        <Routes>\n          <Route path=\"/\" element={<Landing />}></Route>\n          <Route path=\"/encounter\" element={<Encounter />}></Route>\n          <Route path=\"/about\" element={<About />}></Route>\n          <Route path=\"/team\" element={<Team />}></Route>\n        </Routes>\n      </Router>\n    </>\n}","/Users/bubba/Documents/react-project/src/components/NpcStats.js",[],[],"/Users/bubba/Documents/react-project/src/components/MonsterStats.js",[],[],"/Users/bubba/Documents/react-project/src/pages/about.js",[],[],"/Users/bubba/Documents/react-project/src/pages/team.js",["136","137","138"],[],"import NavComp from '../components/NavComp';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Verz from '../assets/verz.jpeg'\nimport Bubba from '../assets/bubba.jpeg'\n\n\nexport default function Team() {\n    return ( \n        <>\n            <NavComp></NavComp>\n            <h1 className=\"text-light pt-4\">Who are we?</h1>\n            <div className=\"d-flex justify-content-center flex-wrap team-container\">\n                    <div className=\"mx-5 team-box\">\n                        <div className=\"imgBox\">\n                          <img className=\"img-fluid\" alt=\"Bubba\" href=\"#\" src={Bubba}/> \n                        </div>\n                        <div className=\"team-content\">\n                            <h2>Bubba</h2>\n                            <p>Jarom Oyler</p>\n                        </div>\n                    </div>\n                    <div className=\"mx-5 team-box\">\n                        <div className=\"imgBox\">\n                            <img className=\"img-fluid\" alt=\"Verzifier\" href=\"#\" src={Verz}/>\n                        </div>\n                        <div className=\"team-content\">\n                            <h2>Verzifier</h2>\n                            <p>Aaron Halsell</p>\n                        </div>\n                    </div>\n          </div>\n\n        </>\n    )\n}\n\n","/Users/bubba/Documents/RegistrationApp/my-app/src/index.js",["139","140","141"],[],"/Users/bubba/Documents/RegistrationApp/my-app/src/reportWebVitals.js",[],[],"/Users/bubba/Documents/RegistrationApp/my-app/src/Login.js",["142","143"],[],"/Users/bubba/Documents/RegistrationApp/my-app/src/user.js",["144","145","146","147","148","149"],[],"/Users/bubba/Documents/RegistrationApp/my-app/src/calendar.js",["150","151"],[],"/Users/bubba/Documents/RegistrationApp/my-app/src/cont.js",[],[],{"ruleId":"152","severity":1,"message":"153","line":20,"column":18,"nodeType":"154","messageId":"155","endLine":20,"endColumn":20},{"ruleId":"156","severity":1,"message":"157","line":2,"column":17,"nodeType":"158","messageId":"159","endLine":2,"endColumn":26},{"ruleId":"156","severity":1,"message":"160","line":2,"column":8,"nodeType":"158","messageId":"159","endLine":2,"endColumn":13},{"ruleId":"156","severity":1,"message":"161","line":2,"column":17,"nodeType":"158","messageId":"159","endLine":2,"endColumn":25},{"ruleId":"162","severity":1,"message":"163","line":441,"column":66,"nodeType":"164","messageId":"165","endLine":441,"endColumn":67},{"ruleId":"162","severity":1,"message":"163","line":542,"column":75,"nodeType":"164","messageId":"165","endLine":542,"endColumn":76},{"ruleId":"166","severity":1,"message":"167","line":139,"column":37,"nodeType":"168","endLine":139,"endColumn":76},{"ruleId":"166","severity":1,"message":"167","line":186,"column":30,"nodeType":"168","endLine":186,"endColumn":66},{"ruleId":"166","severity":1,"message":"167","line":234,"column":29,"nodeType":"168","endLine":234,"endColumn":65},{"ruleId":"166","severity":1,"message":"167","line":263,"column":33,"nodeType":"168","endLine":263,"endColumn":72},{"ruleId":"156","severity":1,"message":"160","line":1,"column":8,"nodeType":"158","messageId":"159","endLine":1,"endColumn":13},{"ruleId":"156","severity":1,"message":"169","line":6,"column":8,"nodeType":"158","messageId":"159","endLine":6,"endColumn":13},{"ruleId":"166","severity":1,"message":"167","line":11,"column":13,"nodeType":"168","endLine":11,"endColumn":52},{"ruleId":"156","severity":1,"message":"170","line":2,"column":35,"nodeType":"158","messageId":"159","endLine":2,"endColumn":39},{"ruleId":"156","severity":1,"message":"171","line":2,"column":8,"nodeType":"158","messageId":"159","endLine":2,"endColumn":17},{"ruleId":"156","severity":1,"message":"172","line":3,"column":8,"nodeType":"158","messageId":"159","endLine":3,"endColumn":11},{"ruleId":"156","severity":1,"message":"173","line":4,"column":8,"nodeType":"158","messageId":"159","endLine":4,"endColumn":11},{"ruleId":"156","severity":1,"message":"174","line":4,"column":8,"nodeType":"158","messageId":"159","endLine":4,"endColumn":17},{"ruleId":"156","severity":1,"message":"175","line":5,"column":8,"nodeType":"158","messageId":"159","endLine":5,"endColumn":13},{"ruleId":"156","severity":1,"message":"176","line":6,"column":8,"nodeType":"158","messageId":"159","endLine":6,"endColumn":12},{"ruleId":"156","severity":1,"message":"175","line":20,"column":10,"nodeType":"158","messageId":"159","endLine":20,"endColumn":15},{"ruleId":"156","severity":1,"message":"176","line":39,"column":10,"nodeType":"158","messageId":"159","endLine":39,"endColumn":14},{"ruleId":"156","severity":1,"message":"161","line":3,"column":9,"nodeType":"158","messageId":"159","endLine":3,"endColumn":17},{"ruleId":"156","severity":1,"message":"157","line":3,"column":19,"nodeType":"158","messageId":"159","endLine":3,"endColumn":28},{"ruleId":"177","severity":1,"message":"178","line":26,"column":76,"nodeType":"168","endLine":26,"endColumn":96},{"ruleId":"177","severity":1,"message":"178","line":29,"column":79,"nodeType":"168","endLine":29,"endColumn":99},{"ruleId":"177","severity":1,"message":"178","line":32,"column":121,"nodeType":"168","endLine":32,"endColumn":141},{"ruleId":"177","severity":1,"message":"178","line":35,"column":79,"nodeType":"168","endLine":35,"endColumn":99},{"ruleId":"156","severity":1,"message":"179","line":3,"column":8,"nodeType":"158","messageId":"159","endLine":3,"endColumn":12},{"ruleId":"156","severity":1,"message":"180","line":4,"column":8,"nodeType":"158","messageId":"159","endLine":4,"endColumn":16},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'React' is defined but never used.","'useState' is defined but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Style' is defined but never used.","'Link' is defined but never used.","'Container' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'LoginSign' is defined but never used.","'Login' is defined but never used.","'Sign' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'logo' is defined but never used.","'userLogo' is defined but never used."]